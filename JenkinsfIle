pipeline {
  agent {
    label 'ETQA-MAC2'
  }

  parameters {
        choice(name:'environment',choices:['QA','STG','STG_SG','LIVE','LIVE_SG'],description:'')
    }

  stages {
    stage('build and test') {

      steps {
        sh 'npm --version'
        script {
          case_tag = "${params.environment}".toLowerCase()
          println ("case_tag after initial " + case_tag)
          if (env.environment == 'QA'){
             case_tag = 'qa'
          }
          else if (env.environment == 'STG'){
             case_tag = 'stg'
          }
          else if (env.environment == 'STG_SG'){
             case_tag = 'stg_sg'
          }
          else if (env.environment == 'LIVE'){
             case_tag = 'live'
          }
          else if (env.environment == 'LIVE_SG'){
             case_tag = 'live_sg'
          }
          println ("case_tag after if else " + case_tag)

          sh 'yarn install --frozen-lockfile'
          sh 'yarn cypress:run --env configFile=${case_tag}  --spec "cypress/integration/e2e/*" --reporter-options configFile=reporter-config.json'
         }
      }
    }
  }
 post {
    always {
      junit 'results/result*.xml'
    }
    failure {
         emailext (
            subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
            body: '''${SCRIPT, template="groovy-html.template"}''',
            mimeType: 'text/html',
            to: "curry.sun@ef.com,nancy.zhangcr@ef.com,cindy.song@ef.com,Eileen.Chen@ef.com",
            from: "qa.testauto@ef.com"
        )
    }
  }
}